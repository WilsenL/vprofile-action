name: vprofile actions
on: workflow_dispatch
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: vproaction
  EKS_CLUSTER: vpro-eks

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Maven Test
        run: mvn test

      - name: Checkstyle
        run: mvn checkstyle:checkstyle

      - name: Set Java 11
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

      - name: SonarQube Scan
        run: sonar-scanner
          -Dsonar.host.url=${{ secrets.SONAR_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_NAME }}
          -Dsonar.sources=src/
          -Dsonar.junit.reportPaths=target/surefire-reports
          -Dsonar.jacoco.reportPaths=target/jacoco.exec
          -Dsonar.checkstyle.reportPaths=target/checkstyle-result.xml
          -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/

  BUILD_AND_PUBLISH:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: configure aws creds
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
          aws configure set region ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ secrets.REGISTRY }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest .
          docker tag ${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest ${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.run_number }}
          docker push ${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.run_number }}

    #   - name: upload image to ECR
    #     uses: appleboy/docker-ecr-action@master
    #     with:
    #       access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       registry: ${{ secrets.REGISTRY }}
    #       repo: ${{ env.ECR_REPOSITORY }}
    #       region: ${{ env.AWS_REGION }}
    #       tags: latest, ${{ github.run_number }}
    #       daemon_off: false
    #       dockerfile: ./Dockerfile
    #       context: ./

  DeployToEKS:
    needs: BUILD_AND_PUBLISH
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: configure aws creds
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
          aws configure set region ${{ env.AWS_REGION }}

      - name: Get Kube config file
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}

      - name: Print config file
        run: cat ~/.kube/config

      - name: Login to ECR
        run: kubectl create secret docker-registry regcred --docker-server=${{ secrets.REGISTRY }} --docker-username=AWS  --docker-password=$(aws ecr get-login-password)
